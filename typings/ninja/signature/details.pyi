"""This type stub file was generated by pyright."""

from collections.abc import Callable
from typing import Any

__all__ = ["ViewSignature", "detect_collection_fields", "is_collection_type", "is_pydantic_model"]
FuncParam = ...

class ViewSignature:
    FLATTEN_PATH_SEP = ...
    response_arg: str | None = ...
    def __init__(self, path: str, view_func: Callable[..., Any]) -> None: ...

def is_pydantic_model(cls: Any) -> bool: ...
def is_collection_type(annotation: Any) -> bool: ...
def detect_collection_fields(args: list[FuncParam], flatten_map: dict[str, tuple[str, ...]]) -> list[str]:
    """Django QueryDict has values that are always lists, so we need to help django ninja to understand
    better the input parameters if it's a list or a single value
    This method detects attributes that should be treated by ninja as lists and returns this list as a result
    """
