"""This type stub file was generated by pyright."""

from typing import Any

from django.http import StreamingHttpResponse
from ninja import NinjaAPI, Router
from ninja.responses import Response as HttpResponse

def build_absolute_uri(location: str | None = ...) -> str: ...

class NinjaClientBase:
    __test__ = ...
    def __init__(self, router_or_app: NinjaAPI | Router, headers: dict[str, str] | None = ..., COOKIES: dict[str, str] | None = ...) -> None: ...
    def get(self, path: str, data: dict | None = ..., **request_params: Any) -> NinjaResponse: ...
    def post(self, path: str, data: dict | None = ..., json: Any = ..., **request_params: Any) -> NinjaResponse: ...
    def patch(self, path: str, data: dict | None = ..., json: Any = ..., **request_params: Any) -> NinjaResponse: ...
    def put(self, path: str, data: dict | None = ..., json: Any = ..., **request_params: Any) -> NinjaResponse: ...
    def delete(self, path: str, data: dict | None = ..., json: Any = ..., **request_params: Any) -> NinjaResponse: ...
    def request(self, method: str, path: str, data: dict | None = ..., json: Any = ..., **request_params: Any) -> NinjaResponse: ...
    @property
    def urls(self) -> list: ...

class TestClient(NinjaClientBase): ...
class TestAsyncClient(NinjaClientBase): ...

class NinjaResponse:
    def __init__(self, http_response: HttpResponse | StreamingHttpResponse) -> None: ...
    def json(self) -> Any: ...
    @property
    def data(self) -> Any: ...
    def __getitem__(self, key: str) -> Any: ...
    def __getattr__(self, attr: str) -> Any: ...
