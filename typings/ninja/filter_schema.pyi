"""This type stub file was generated by pyright."""

from typing import Literal, TypeVar

from django.db.models import Q, QuerySet

from .schema import Schema

DEFAULT_IGNORE_NONE = ...
DEFAULT_CLASS_LEVEL_EXPRESSION_CONNECTOR = ...
DEFAULT_FIELD_LEVEL_EXPRESSION_CONNECTOR = ...
type ExpressionConnector = Literal["AND", "OR", "XOR"]
T = TypeVar("T", bound=QuerySet)

class FilterSchema(Schema):
    class Config(Schema.Config):
        ignore_none: bool = ...
        expression_connector: ExpressionConnector = ...

    def custom_expression(self) -> Q:
        """Implement this method to return a combination of filters that will be used"""

    def get_filter_expression(self) -> Q:
        """Returns a Q expression based on the current filters"""

    def filter(self, queryset: T) -> T: ...
