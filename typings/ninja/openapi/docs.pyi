"""This type stub file was generated by pyright."""

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING, Any

from django.http import HttpRequest, HttpResponse
from ninja import NinjaAPI
from ninja.types import DictStrAny

if TYPE_CHECKING: ...
ABS_TPL_PATH = ...

class DocsBase(ABC):
    @abstractmethod
    def render_page(self, request: HttpRequest, api: NinjaAPI, **kwargs: Any) -> HttpResponse: ...
    def get_openapi_url(self, api: NinjaAPI, path_params: DictStrAny) -> str: ...

class Swagger(DocsBase):
    template = ...
    template_cdn = ...
    default_settings = ...
    def __init__(self, settings: DictStrAny | None = ...) -> None: ...
    def render_page(self, request: HttpRequest, api: NinjaAPI, **kwargs: Any) -> HttpResponse: ...

class Redoc(DocsBase):
    template = ...
    template_cdn = ...
    default_settings: DictStrAny = ...
    def __init__(self, settings: DictStrAny | None = ...) -> None: ...
    def render_page(self, request: HttpRequest, api: NinjaAPI, **kwargs: Any) -> HttpResponse: ...

def render_template(request: HttpRequest, template: str, template_cdn: str, context: DictStrAny) -> HttpResponse:
    """I do not really want ninja to be required in INSTALLED_APPS to ease installation
    so it automatically detects - if ninja is in INSTALLED_APPS - then we render with django.shortcuts.render
    otherwise - rendering custom html with swagger js from cdn
    """
