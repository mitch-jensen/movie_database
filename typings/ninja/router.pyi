"""This type stub file was generated by pyright."""

from collections.abc import Callable, Iterator
from typing import TYPE_CHECKING, Any

from django.urls import URLPattern
from ninja import NinjaAPI
from ninja.constants import NOT_SET_TYPE
from ninja.throttling import BaseThrottle
from ninja.types import TCallable

if TYPE_CHECKING: ...
__all__ = ["Router"]

class Router:
    def __init__(
        self,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        tags: list[str] | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
    ) -> None: ...
    def get(
        self,
        path: str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> Callable[[TCallable], TCallable]: ...
    def post(
        self,
        path: str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> Callable[[TCallable], TCallable]: ...
    def delete(
        self,
        path: str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> Callable[[TCallable], TCallable]: ...
    def patch(
        self,
        path: str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> Callable[[TCallable], TCallable]: ...
    def put(
        self,
        path: str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> Callable[[TCallable], TCallable]: ...
    def api_operation(
        self,
        methods: list[str],
        path: str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> Callable[[TCallable], TCallable]: ...
    def add_api_operation(
        self,
        path: str,
        methods: list[str],
        view_func: Callable,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        response: Any = ...,
        operation_id: str | None = ...,
        summary: str | None = ...,
        description: str | None = ...,
        tags: list[str] | None = ...,
        deprecated: bool | None = ...,
        by_alias: bool | None = ...,
        exclude_unset: bool | None = ...,
        exclude_defaults: bool | None = ...,
        exclude_none: bool | None = ...,
        url_name: str | None = ...,
        include_in_schema: bool = ...,
        openapi_extra: dict[str, Any] | None = ...,
    ) -> None: ...
    def set_api_instance(self, api: NinjaAPI, parent_router: Router | None = ...) -> None: ...
    def urls_paths(self, prefix: str) -> Iterator[URLPattern]: ...
    def add_router(
        self,
        prefix: str,
        router: Router | str,
        *,
        auth: Any = ...,
        throttle: BaseThrottle | list[BaseThrottle] | NOT_SET_TYPE = ...,
        tags: list[str] | None = ...,
    ) -> None: ...
    def build_routers(self, prefix: str) -> list[tuple[str, Router]]: ...
