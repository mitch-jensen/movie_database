"""This type stub file was generated by pyright."""

from collections.abc import Callable
from typing import Any, TypeVar, no_type_check

from django.db.models.fields import Field as DjangoField
from ninja.openapi.schema import OpenAPISchema
from ninja.types import DictStrAny

__all__ = ["create_m2m_link_type", "get_related_field_schema", "get_schema_field"]

def title_if_lower(s: str) -> str: ...

class AnyObject:
    @classmethod
    def __get_pydantic_core_schema__(cls, source: Any, handler: Callable[..., Any]) -> Any: ...
    @classmethod
    def __get_pydantic_json_schema__(cls, schema: Any, handler: Callable[..., Any]) -> DictStrAny: ...
    @classmethod
    def validate(cls, value: Any, _: Any) -> Any: ...

TYPES = ...
TModel = TypeVar("TModel")

def register_field(django_field: str, python_type: Any) -> None: ...
@no_type_check
def create_m2m_link_type(type_: type[TModel]) -> type[TModel]: ...
@no_type_check
def get_schema_field(field: DjangoField, *, depth: int = ..., optional: bool = ...) -> tuple:
    """Returns pydantic field from django's model field"""

@no_type_check
def get_related_field_schema(field: DjangoField, *, depth: int) -> tuple[OpenAPISchema]: ...
